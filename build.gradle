plugins {
	id 'java'
	id 'groovy'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.netflix.dgs.codegen' version '6.2.2'
}

group = 'com.practice'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation group: 'com.netflix.graphql.dgs', name: 'graphql-dgs-spring-boot-starter', version: '9.0.4'
	compileOnly group: 'org.projectlombok', name: 'lombok'
	annotationProcessor group: 'org.projectlombok', name: 'lombok'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
	implementation 'org.apache.groovy:groovy'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	implementation 'org.liquibase:liquibase-core'

	// Spock dependencies
	testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.4-M4-groovy-4.0'
	testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.4-M4-groovy-4.0'

	// DGS testing utilities
	testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:latest.release'


}

tasks.named('test') {
	useJUnitPlatform()
}


generateJava {
	schemaPaths = ['src/main/resources/schema/schema.graphqls']
	packageName = 'com.practice.LLTS_employee.generated'
}